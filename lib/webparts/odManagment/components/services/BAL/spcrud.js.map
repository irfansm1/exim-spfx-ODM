{"version":3,"sources":["webparts/odManagment/components/services/BAL/spcrud.ts"],"names":[],"mappings":"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","file":"webparts/odManagment/components/services/BAL/spcrud.js","sourcesContent":["import { IOdManagmentProps } from \"../interfaces/IOdManagmentProps\";\r\nimport { IFieldInfo, IFile, IFileAddResult, IFileInfo, IItemAddResult, IItemUpdateResult, IListInfo } from \"@pnp/sp/presets/all\";\r\nimport SPCRUDOPS from \"../DAL/spcrudops\";\r\n\r\nexport default class SPCRUD {\r\n\r\n    public spCrudOps = new SPCRUDOPS();\r\n\r\n    public async getData(listName: string, columnsToRetrieve: string, columnsToExpand: string, filters: string\r\n        , orderby: { column: string, isAscending: boolean }, props: IOdManagmentProps): Promise<any[]> {\r\n        return await this.spCrudOps.getData(listName, columnsToRetrieve, columnsToExpand, filters, orderby, props);\r\n    }\r\n    public async getRootData(listName: string, columnsToRetrieve: string, columnsToExpand: string, filters: string\r\n        , orderby: { column: string, isAscending: boolean }, props: IOdManagmentProps): Promise<any[]> {\r\n        return await this.spCrudOps.getData(listName, columnsToRetrieve, columnsToExpand, filters, orderby, props);\r\n    }\r\n    public async getItemById(listName: string, columnsToRetrieve: string, columnsToExpand: string, itemId: number\r\n        , props: IOdManagmentProps): Promise<any> {\r\n        return await this.spCrudOps.getItemById(listName, columnsToRetrieve, columnsToExpand, itemId, props);\r\n    }\r\n    //get choice fields data\r\n    public async getChoiceFieldData(listName :string,choiceFieldName,props:IOdManagmentProps):Promise<any[]>{\r\n        return await this.spCrudOps.getChoicesByFields(listName,choiceFieldName,props);\r\n    }\r\n    public async insertData(listName: string, data: {}, props: IOdManagmentProps): Promise<IItemAddResult> {\r\n        return await this.spCrudOps.insertData(listName, data, props);\r\n    }\r\n\r\n    public async updateData(listName: string, itemId: number, data: {}, props: IOdManagmentProps): Promise<IItemUpdateResult> {\r\n        return await this.spCrudOps.updateData(listName, itemId, data, props);\r\n    }\r\n\r\n    public async deleteData(listName: string, itemId: number, props: IOdManagmentProps): Promise<void> {\r\n        return await this.spCrudOps.deleteData(listName, itemId, props);\r\n    }\r\n\r\n    public async getListInfo(listName: string, props: IOdManagmentProps): Promise<IListInfo> {\r\n        return await this.spCrudOps.getListInfo(listName, props);\r\n    }\r\n\r\n    public async batchInsert(listName: string, data: [], props: IOdManagmentProps): Promise<IItemAddResult[]> {\r\n        return await this.spCrudOps.batchInsert(listName, data, props);\r\n    }\r\n\r\n    public async batchUpdate(listName: string, data: [], props: IOdManagmentProps): Promise<IItemUpdateResult[]> {\r\n        return await this.spCrudOps.batchUpdate(listName, data, props);\r\n    }\r\n\r\n    public async batchDelete(listName: string, data: [], props: IOdManagmentProps): Promise<void> {\r\n        return await this.spCrudOps.batchDelete(listName, data, props);\r\n    }\r\n\r\n    public async uploadFile(folderServerRelativeUrl: string, file: File, props: IOdManagmentProps): Promise<IFileAddResult> {\r\n        return await this.spCrudOps.uploadFile(folderServerRelativeUrl, file, props);\r\n    }\r\n\r\n    public async updateFileContent(fileServerRelativeUrl: string, file: File, props: IOdManagmentProps): Promise<IFileAddResult | IFile> {\r\n        return await this.spCrudOps.updateFileContent(fileServerRelativeUrl, file, props);\r\n    }\r\n\r\n    public async deleteFile(fileServerRelativeUrl: string, props: IOdManagmentProps): Promise<void> {\r\n        return await this.spCrudOps.deleteFile(fileServerRelativeUrl, props);\r\n    }\r\n\r\n    public async getSPListColumn(listName: string, columnInternalName: string, props: IOdManagmentProps): Promise<IFieldInfo>{\r\n        return await this.spCrudOps.getSPListColumn(listName, columnInternalName, props);\r\n    }\r\n}\r\n"],"sourceRoot":"../../../../../../src"}