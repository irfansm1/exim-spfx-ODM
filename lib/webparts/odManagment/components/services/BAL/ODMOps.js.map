{"version":3,"sources":["webparts/odManagment/components/services/BAL/ODMOps.ts"],"names":[],"mappings":"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","file":"webparts/odManagment/components/services/BAL/ODMOps.js","sourcesContent":["\nimport { IOdManagmentProps } from '../interfaces/IOdManagmentProps';\nimport { IEmployee } from '../interfaces/IEmployee';\nimport SPCRUDOPS from '../DAL/spcrudops';\nimport { IODRequest } from '../interfaces/IODRequest';\n\nexport interface ODMOps {\n    getApprovalDashboard(props: IOdManagmentProps): Promise<IOdManagmentProps>;\n    getPendingOD(props: IOdManagmentProps, employeeID: string): Promise<IOdManagmentProps>;\n    getMyOD(props: IOdManagmentProps, employeeID: string): Promise<IOdManagmentProps>;\n    getMyApprovedOD(props: IOdManagmentProps, employeeID: string): Promise<IOdManagmentProps>;\n    getGroupHeads(props: IOdManagmentProps): Promise<IOdManagmentProps>;\n    getSubGroups(props: IOdManagmentProps): Promise<IOdManagmentProps>;\n    getUserProfile(props: IOdManagmentProps): Promise<IOdManagmentProps>;\n    insertNewODRequest(props: IOdManagmentProps,requestData:any): Promise<IOdManagmentProps>;\n    getCategories(props: IOdManagmentProps): Promise<IOdManagmentProps>;\n    getChoices(props: IOdManagmentProps,fieldName:string): Promise<any[]>;\n    getODRequest(props:IOdManagmentProps,itemID:number): Promise<IODRequest>;\n    getApprovals(props: IOdManagmentProps, employeeID: string): Promise<IOdManagmentProps>;\n    setApproval(props: IOdManagmentProps, ItemID: number, request:any): Promise<any>;\n}\n\nexport default function ODMOps() {\n    const spCrudOps = new SPCRUDOPS();\n    const getGroups = (groupArray) => {\n        let groups = \"\";\n        groupArray.forEach(element => {\n            groups = groups + (groups == \"\" ? element.ShortName : \",\" + element.ShortName)\n        });\n        return groups;\n    }\n    const getApprovalDashboard = async (props: IOdManagmentProps): Promise<any[]> => {\n        var currentUserLogin = (props.currentSPContext.pageContext._user._displayName == \"spfarmadmin\") ? \"developer4@eximbankindia.in\" : props.currentSPContext.pageContext._user._email;\n        //props.currentSPContext.pageContext._user._email;\n        return await (await spCrudOps).getData(\"ODManagement\"\n            , \"*,EmployeeID/EmployeeName,EmployeeID/Title\"\n            , \"EmployeeID\"\n            , \"\"\n            , { column: 'Id', isAscending: false }, props).then(results => {\n                console.log(results);\n                return results;\n            });\n    };\n    const getPendingOD = async (props: IOdManagmentProps, employeeID: string): Promise<any[]> => {\n        var currentUserLogin = (props.currentSPContext.pageContext._user._displayName == \"spfarmadmin\") ? \"developer4@eximbankindia.in\" : props.currentSPContext.pageContext._user._email;\n        //props.currentSPContext.pageContext._user._email;\n        return await (await spCrudOps).getData(\"ODManagement\"\n            , \"*,EmployeeID/EmployeeName,EmployeeID/Title\"\n            , \"EmployeeID\"\n            , \"EmployeeID/Title eq \" + employeeID + \" and ApproverResponse eq 'Pending'\"\n            , { column: 'Id', isAscending: false }, props).then(results => {\n                return results;\n            });\n    };\n    const getMyOD = async (props: IOdManagmentProps, employeeID: string): Promise<any[]> => {\n        var currentUserLogin = (props.currentSPContext.pageContext._user._displayName == \"spfarmadmin\") ? \"developer4@eximbankindia.in\" : props.currentSPContext.pageContext._user._email;\n        //props.currentSPContext.pageContext._user._email;\n        return await (await spCrudOps).getData(\"ODManagement\"\n            , \"*,EmployeeID/EmployeeName,EmployeeID/Title\"\n            , \"EmployeeID\"\n            , \"EmployeeID/Title eq \" + employeeID\n            , { column: 'Id', isAscending: false }, props).then(results => {\n                return results;\n            });\n    };\n    const getMyApprovedOD = async (props: IOdManagmentProps, employeeID: string): Promise<any[]> => {\n        debugger;\n        var currentUserLogin = (props.currentSPContext.pageContext._user._displayName == \"spfarmadmin\") ? \"developer4@eximbankindia.in\" : props.currentSPContext.pageContext._user._email;\n        //props.currentSPContext.pageContext._user._email;\n        return await (await spCrudOps).getData(\"ODManagement\"\n            , \"*,EmployeeID/EmployeeName,EmployeeID/Title\"\n            , \"EmployeeID\"\n            , \"EmployeeID/Title eq \" + employeeID + \" and ApproverResponse eq 'Approved'\"\n            , { column: 'Id', isAscending: false }, props).then(results => {\n                console.log(results);\n                return results;\n            });\n    };\n    const getGroupHeads = async (props: IOdManagmentProps): Promise<IEmployee[]> => {\n        return await (await spCrudOps).getRootData(\"EmployeeMaster\"\n            , \"*,Designation/Title,LeaveLevel1/Title,LeaveLevel2/Title,LeaveLevel2/Id,SubGroup/ShortName,CurrentOfficeLocation/Title\"\n            , \"SubGroup,Designation,LeaveLevel1,LeaveLevel2,CurrentOfficeLocation\"\n            , \"((Role eq 'Group Head') or (Role eq 'Regional Head')) and (Active eq 1)\"\n            , { column: 'Id', isAscending: false }, props).then(results => {\n                console.log(results);\n                let employees: Array<IEmployee> = new Array<IEmployee>();\n                results.map(item => {\n                    employees.push({\n                        Title: item.Title,\n                        ID: item.ID,\n                        EmployeeTitle: item.EmployeeTitle,\n                        FirstName: item.FirstName,\n                        MiddleName: item.MiddleName,\n                        LastName: item.LastName,\n                        UserName: item.UserName,\n                        Gender: item.Gender,\n                        OfficeLocation: item.OfficeLocation,\n                        CurrentOfficeLocation: item.CurrentOfficeLocation.Title,\n                        SubGroup: (item.SubGroup.length > 0 ? getGroups(item.SubGroup) : \"\"),\n                        Unit: item.Unit,\n                        EmployeeType: item.EmployeeType,\n                        Scale: item.Scale,\n                        Grade: item.Grade,\n                        Designation: item.Designation.Title,\n                        Payscale: item.Payscale,\n                        ReportingManager: item.ReportingManager,\n                        AlternateReportingManager: item.AlternateReportingManager,\n                        Active: item.Active,\n                        Phone_x0020_No: item.Phone_x0020_No,\n                        MobileNo_x002e_: item.MobileNo_x002e_,\n                        CompanyEmail: item.CompanyEmail,\n                        AlternateEmail: item.AlternateEmail,\n                        LeaveLevel1: item.LeaveLevel1.Title,\n                        LeaveLevel2: item.LeaveLevel2.Title,\n                        LeaveLevel2Id: item.LeaveLevel2Id,\n                        Role: item.Role,\n                        BranchName: item.BranchName,\n                        HHApproverName: item.HHApproverName,\n                        LTCDate: item.LTCDate,\n                        TempDOB: item.TempDOB,\n                        EmpType: item.EmpType\n                    });\n                });\n\n                return employees;\n            });\n    };\n    const getSubGroups = async (props: IOdManagmentProps): Promise<any> => {\n        return await (await spCrudOps).getRootData(\"Sub Group Master\"\n            , \"*\"\n            , \"\"\n            , \"\"\n            , { column: 'Id', isAscending: false }, props).then(results => {\n                console.log(results);\n                return results;\n            });\n    };\n    const getUserProfile = async (props: IOdManagmentProps): Promise<any> => {\n        return await (await spCrudOps).getUserProfile(props);\n    };\n    const insertNewODRequest = async (props: IOdManagmentProps,requestData:any): Promise<any> => {\n        return await (await spCrudOps).insertData(\"ODManagement\",requestData,props);\n    };\n    const getCategories = async (props: IOdManagmentProps): Promise<any[]> => {\n        return await (await spCrudOps).getChoicesByFields(\"ODManagement\"\n            , \"Category\"\n            , props).then(results => {\n                console.log(results.Choices);\n                return results.Choices;\n            });\n    };\n    const getChoices = async (props: IOdManagmentProps,fieldName:string): Promise<any[]> => {\n        return await (await spCrudOps).getChoicesByFields(\"ODManagement\"\n            , fieldName\n            , props).then(results => {\n                console.log(results.Choices);\n                return results.Choices;\n            });\n    };\n    const getODRequest = async(props:IOdManagmentProps,itemID:number): Promise<IODRequest>=>{\n        return await (await spCrudOps).getItemById(\"ODManagement\"\n            , \"*,EmployeeID/EmployeeName,Approver/Name,Approver/Title\",\"EmployeeID,Approver\",itemID\n            , props).then(results => {\n                //let ODRequest: Array<IODRequest> = new Array<IODRequest>();\n                let ODRequest: IODRequest = {\n                    \n                    ID: results.ID,\n                    EmployeeName: results.EmployeeID.EmployeeName,\n                    ODdays:results.Day,\n                    Remark: results.Remark,\n                    Category: results.Category,\n                    UserName: results.UserName,\n                    Approver: results.Approver,\n                    StartDay: results.StartDay,\n                    HalfType: results.HalfType,\n                    ToDate_Halftype: results.ToDate_Halftype,\n                    LastDay: results.LastDay,\n                    EmployeeCode: results.EmployeeCode,\n                    Designation: \"\",\n                    FromDate: results.FromDate,\n                    Todate: results.Todate,\n                    Status: results.ApproverResponse,\n                    ApproverNameId: results.ApproverNameId,\n                    ApproverName: results.Approver.Title,\n                }\n                return ODRequest;\n            });\n    }\n    const checklAlreadyRaisedRequest = (EmployeeID:string,fromDate:Date,toDate:Date):boolean=>{\n        \n        return false;\n    }\n    const getApprovals = async (props: IOdManagmentProps, employeeID: string): Promise<any[]> => {\n        var currentUserLogin = (props.currentSPContext.pageContext._user._displayName == \"spfarmadmin\") ? \"developer4@eximbankindia.in\" : props.currentSPContext.pageContext._user._email;\n        let email = props.currentSPContext.pageContext._user._email;\n        return await (await spCrudOps).getData(\"ODManagement\"\n            , \"*,EmployeeID/EmployeeName,EmployeeID/Title,Level2EmpID/ID,Level2EmpID/Title\"\n            , \"EmployeeID,Level2EmpID\"\n            , \"Level2EmpID/Title eq \" + employeeID\n            , { column: 'Id', isAscending: false }, props).then(results => {\n                return results;\n            });\n    };\n    const setApproval = async (props: IOdManagmentProps, itemID: number,request:any): Promise<any> => {\n        var currentUserLogin = (props.currentSPContext.pageContext._user._displayName == \"spfarmadmin\") ? \"developer4@eximbankindia.in\" : props.currentSPContext.pageContext._user._email;\n        let email = props.currentSPContext.pageContext._user._email;\n        return await (await spCrudOps).updateData(\"ODManagement\",itemID,request,props);\n    };\n    return {\n          getApprovalDashboard\n        , getGroupHeads\n        , getSubGroups\n        , getUserProfile\n        , getPendingOD\n        , getMyOD\n        , getMyApprovedOD\n        , insertNewODRequest\n        , getCategories\n        , getChoices\n        , checklAlreadyRaisedRequest\n        , getODRequest\n        , getApprovals\n        , setApproval\n    };\n}"],"sourceRoot":"../../../../../../src"}