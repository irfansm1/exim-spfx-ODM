{"version":3,"sources":["webparts/odManagment/components/services/DAL/spcrudops.ts"],"names":[],"mappings":"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","file":"webparts/odManagment/components/services/DAL/spcrudops.js","sourcesContent":["import { IOdManagmentProps } from \"../interfaces/IOdManagmentProps\";\r\nimport { IFile, IFileAddResult,Profiles,IUserProfile, IFieldInfo, IItemAddResult, IItemUpdateResult, IListInfo, Web } from \"@pnp/sp/presets/all\";\r\nimport \"@pnp/sp/lists\";\r\nimport \"@pnp/sp/items\";\r\nimport \"@pnp/sp/profiles\";\r\nimport { ConsoleListener, Logger, LogLevel } from \"@pnp/logging\";\r\n\r\nexport default class SPCRUDOPS {\r\n    public async getData(listName: string, columnsToRetrieve: string, columnsToExpand: string, filters: string, orderby: { column: string, isAscending: boolean }, props: IOdManagmentProps): Promise<any[]> {\r\n        const web = Web(props.currentSPContext.pageContext.web.absoluteUrl);\r\n        return await web.lists.getByTitle(listName).items.select(columnsToRetrieve).expand(columnsToExpand).filter(filters).orderBy(orderby.column, orderby.isAscending).get();\r\n    }\r\n    public  async getRootData(listName: string, columnsToRetrieve: string, columnsToExpand: string, filters: string, orderby: {column: string, isAscending: boolean}, props: IOdManagmentProps): Promise<any[]> {\r\n        let url=window.location.origin;\r\n        let web =  Web(url);\r\n        //const web = Web(props.currentSPContext.pageContext.web.absoluteUrl);\r\n        return await web.lists.getByTitle(listName).items.select(columnsToRetrieve).expand(columnsToExpand).filter(filters).orderBy(orderby.column, orderby.isAscending).get();\r\n    }\r\n    public async getItemById(listName: string, columnsToRetrieve: string, columnsToExpand: string, itemId: number, props: IOdManagmentProps): Promise<any> {\r\n        const web = Web(props.currentSPContext.pageContext.web.absoluteUrl);\r\n        return await web.lists.getByTitle(listName).items.getById(itemId).select(columnsToRetrieve).expand(columnsToExpand).get();\r\n    }\r\n    public async getChoicesByFields(listName: string, fieldName: string, props: IOdManagmentProps): Promise<any> {\r\n        const web = Web(props.currentSPContext.pageContext.web.absoluteUrl);\r\n        return await web.lists.getByTitle(listName).fields.getByTitle(fieldName).get();\r\n         //web.lists.getByTitle(listName).items.add(data);\r\n    }\r\n    public async insertData(listName: string, data: {}, props: IOdManagmentProps): Promise<IItemAddResult> {\r\n        const web = Web(props.currentSPContext.pageContext.web.absoluteUrl);\r\n        return await web.lists.getByTitle(listName).items.add(data);\r\n    }\r\n\r\n    public async updateData(listName: string, itemId: number, data: {}, props: IOdManagmentProps): Promise<IItemUpdateResult> {\r\n        const web = Web(props.currentSPContext.pageContext.web.absoluteUrl);\r\n        return await web.lists.getByTitle(listName).items.getById(itemId).update(data);\r\n    }\r\n\r\n    public async deleteData(listName: string, itemId: number, props: IOdManagmentProps): Promise<void> {\r\n        const web = Web(props.currentSPContext.pageContext.web.absoluteUrl);\r\n        return await web.lists.getByTitle(listName).items.getById(itemId).delete();\r\n    }\r\n\r\n    public async getListInfo(listName: string, props: IOdManagmentProps): Promise<IListInfo> {\r\n        const web = Web(props.currentSPContext.pageContext.web.absoluteUrl);\r\n        const list = await web.lists.getByTitle(listName);\r\n        const listInfo = await list.select(\"Id,Title\")();\r\n\r\n        return listInfo;\r\n    }\r\n\r\n    public async batchInsert(listName: string, data: [], props: IOdManagmentProps): Promise<IItemAddResult[]> {\r\n        const web = Web(props.currentSPContext.pageContext.web.absoluteUrl);\r\n        const list = web.lists.getByTitle(listName);\r\n        const entityTypeFullName = await list.getListItemEntityTypeFullName();\r\n        const batch = web.createBatch();\r\n        let itemAddResult: IItemAddResult[];\r\n\r\n        for (let d = 0; d < data.length; d++) {\r\n            await list.items.inBatch(batch).add(data[d], entityTypeFullName).then(b => {\r\n                itemAddResult.push(b);\r\n            }).catch((e) => { console.log(e) });\r\n        }\r\n\r\n        return await batch.execute().then((v: void) => {\r\n            return itemAddResult;\r\n        });\r\n    }\r\n\r\n    public async batchUpdate(listName: string, data: [], props: IOdManagmentProps): Promise<IItemUpdateResult[]> {\r\n        const web = Web(props.currentSPContext.pageContext.web.absoluteUrl);\r\n        const list = web.lists.getByTitle(listName);\r\n        const entityTypeFullName = await list.getListItemEntityTypeFullName();\r\n        const batch = web.createBatch();\r\n        let itemUpdateResult: IItemUpdateResult[];\r\n\r\n        for (let d = 0; d < data.length; d++) {\r\n            await list.items.getById(data[d][\"Id\"]).inBatch(batch).update(data[d], entityTypeFullName).then(b => {\r\n                itemUpdateResult.push(b);\r\n                console.log(b);\r\n            }).catch((e) => { console.log(e) });\r\n        }\r\n\r\n        return await batch.execute().then((v: void) => {\r\n            return itemUpdateResult;\r\n        });\r\n    }\r\n\r\n    public async batchDelete(listName: string, data: [], props: IOdManagmentProps): Promise<void> {\r\n        const web = Web(props.currentSPContext.pageContext.web.absoluteUrl);\r\n        const list = web.lists.getByTitle(listName);\r\n        const batch = web.createBatch();\r\n                      \r\n        for (let d = 0; d < data.length; d++) {\r\n            await list.items.getById(data[d][\"Id\"]).inBatch(batch).delete();\r\n        }\r\n\r\n        return await batch.execute();\r\n    }\r\n\r\n    public async uploadFile(folderServerRelativeUrl: string, file: File, props: IOdManagmentProps): Promise<IFileAddResult> {\r\n        Logger.subscribe(new ConsoleListener());\r\n        Logger.activeLogLevel = LogLevel.Verbose;\r\n\r\n        const web = Web(props.currentSPContext.pageContext.web.absoluteUrl);\r\n        const ticks = ((new Date().getTime() * 10000) + 621355968000000000);\r\n        if (file.size <= 10485760) {\r\n            return await web.getFolderByServerRelativeUrl(folderServerRelativeUrl).files.addUsingPath(encodeURI(ticks.toString() + \"_\" + file.name), file, { Overwrite: true });\r\n        }\r\n        else {\r\n            return await web.getFolderByServerRelativeUrl(folderServerRelativeUrl).files.addChunked(ticks.toString() + \"_\" + file.name, file, data => {\r\n                Logger.log({ data: data, level: LogLevel.Verbose, message: \"progress\" });\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    public async updateFileContent(fileServerRelativeUrl: string, file: File, props: IOdManagmentProps): Promise<IFileAddResult | IFile> {\r\n        Logger.subscribe(new ConsoleListener());\r\n        Logger.activeLogLevel = LogLevel.Verbose;\r\n\r\n        const web = Web(props.currentSPContext.pageContext.web.absoluteUrl);\r\n        if (file.size <= 10485760) {\r\n            return await web.getFileByServerRelativeUrl(fileServerRelativeUrl).setContent(file);\r\n        }\r\n        else {\r\n            return await web.getFileByServerRelativeUrl(fileServerRelativeUrl).setContentChunked(file, data => {\r\n                Logger.log({ data: data, level: LogLevel.Verbose, message: \"progress\" });\r\n            });\r\n        }\r\n    }\r\n\r\n    public async deleteFile(fileServerRelativeUrl: string, props: IOdManagmentProps): Promise<void> {\r\n        Logger.subscribe(new ConsoleListener());\r\n        Logger.activeLogLevel = LogLevel.Verbose;\r\n\r\n        const web = Web(props.currentSPContext.pageContext.web.absoluteUrl);\r\n\r\n        return await web.getFileByServerRelativeUrl(fileServerRelativeUrl).delete();\r\n    }\r\n\r\n    public async getSPListColumn(listName: string, columnInternalName: string, props: IOdManagmentProps): Promise<IFieldInfo>{\r\n        const web = Web(props.currentSPContext.pageContext.web.absoluteUrl);\r\n        return await web.lists.getByTitle(listName).fields.getByInternalNameOrTitle(columnInternalName).select('Choices,ID').get();\r\n    }\r\n    public async getUserProfile(props: IOdManagmentProps): Promise<any> {\r\n        const web = Profiles(props.currentSPContext.pageContext.web.absoluteUrl);\r\n        //web.myProperties.get\r\n        await web.myProperties.get().then((response: any): Promise<{ value: IUserProfile }> => {    \r\n            console.log(response);\r\n            return response.json();    \r\n          })  ;\r\n        //await web.myProperties.select(\"Title\", \"Email\")();\r\n       // web.setMultiValuedProfileProperty\r\n    }\r\n}"],"sourceRoot":"../../../../../../src"}